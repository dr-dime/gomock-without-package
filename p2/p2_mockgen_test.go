// Code generated by MockGen. DO NOT EDIT.
// Source: p2/p2.go

// Package mock_p2 is a generated GoMock package.
package mock_p2

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockP2 is a mock of P2 interface.
type MockP2 struct {
	ctrl     *gomock.Controller
	recorder *MockP2MockRecorder
}

// MockP2MockRecorder is the mock recorder for MockP2.
type MockP2MockRecorder struct {
	mock *MockP2
}

// NewMockP2 creates a new mock instance.
func NewMockP2(ctrl *gomock.Controller) *MockP2 {
	mock := &MockP2{ctrl: ctrl}
	mock.recorder = &MockP2MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockP2) EXPECT() *MockP2MockRecorder {
	return m.recorder
}

// M1 mocks base method.
func (m *MockP2) M1() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "M1")
}

// M1 indicates an expected call of M1.
func (mr *MockP2MockRecorder) M1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "M1", reflect.TypeOf((*MockP2)(nil).M1))
}
